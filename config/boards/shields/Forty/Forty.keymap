#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT  0
#define ONE 1
#define TWO 2
#define THREE 3

&soft_off {
    hold-time-ms = <2000>; // Only turn off it the key is held for 2 seconds or longer.
};

&mt { tapping-term-ms = <200>; };

/ {
    macros {
        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };

        shift: shift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHIFT>;

            label = "SHIFT";
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
				&kp Q        &kp W       &kp E       &kp R                 &kp T                    &kp Y                 &kp U              &kp I               &kp O               &kp P         
				&mt LCTRL A  &mt LGUI S  &mt LALT D  &mt LSHFT F           &kp G                    &kp H                 &mt LSHFT J        &mt LALT K          &mt LGUI L          &mt LCTRL SEMI
				&kp Z        &kp X       &kp C       &kp V                 &kp B                    &kp N                 &kp M              &kp COMMA           &kp DOT             &kp FSLH      
				&none        &none       &kp ESC     &lt ONE TAB           &lt THREE RIGHT_CONTROL  &kp DEL               &lt TWO SPACE      &kp ENTER           &none               &none         
            >;
        };

        one {
            bindings = <
				&as GRAVE    &kp RA(N2)  &as MINUS   &as NON_US_BACKSLASH  &as EQUAL                &as SINGLE_QUOTE      &as RIGHT_BRACKET  &as NON_US_HASH     &as LBKT            &kp BACKSPACE
				&as N1       &as N2      &as N3      &as N4                &as N5                   &as N6                &as N7             &as N8              &as N9              &as N0       
				&kp RA(N7)   &kp RA(N8)  &kp RA(N9)  &kp RA(N0)            &kp RA(E)                &kp RA(LEFT_BRACKET)  &kp LEFT           &kp DOWN            &kp UP              &kp RIGHT    
				&none        &none       &trans      &trans                &trans                   &trans                &trans             &trans              &none               &none        
            >;
        };

        two {
            bindings = <
				&none        &none       &none       &none                 &none                    &bt BT_NXT            &kp HOME           &kp PAGE_UP         &kp END             &bt BT_CLR  
				&none        &none       &none       &none                 &none                    &bt BT_PRV            &none              &kp PAGE_DOWN       &none               &sys_reset  
				&none        &none       &none       &none                 &none                    &bt BT_SEL 0          &bt BT_SEL 1       &bt BT_SEL 2        &bt BT_SEL 3        &bt BT_SEL 4
				&none        &none       &soft_off   &studio_unlock        &bootloader              &trans                &trans             &trans              &none               &none       
            >;
        };

        three {
            bindings = <
				&kp F1       &kp F2      &kp F3      &kp F4                &kp C_NEXT               &kp C_VOL_UP          &kp KP_N7          &kp KP_N8           &kp KP_N9           &kp KP_MINUS            
				&kp F5       &kp F6      &kp F7      &kp F8                &kp C_PP                 &kp C_MUTE            &mt LSHIFT KP_N4   &mt LEFT_ALT KP_N5  &mt LEFT_GUI KP_N6  &mt LEFT_CONTROL KP_PLUS
				&kp F9       &kp F10     &kp F11     &kp F12               &kp C_PREV               &kp C_VOL_DN          &kp KP_N1          &kp KP_N2           &kp KP_N3           &kp KP_MULTIPLY         
				&none        &none       &trans      &trans                &trans                   &trans                &kp KP_DOT         &kp KP_N0           &none               &none                   
            >;
        };
    };
};
